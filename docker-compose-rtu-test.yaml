#
# build all non-image containers
# $ docker-compose -f docker-compose-rtu-test.yaml build
# can be combined into one command to also start it afterwards
# $ docker-compose -f docker-compose-rtu-test.yaml up --build
#

version: "3.8"

services:
  micropython-client:
    build:
      context: .
      dockerfile: Dockerfile.client_rtu
    container_name: micropython-client
    volumes:
      - ./:/home
      - ./registers:/home/registers
      - ./umodbus:/root/.micropython/lib/umodbus
      - ./fakes:/usr/lib/micropython
    expose:
      - "65433"
    ports:
      - "65433:65433" # reach "micropython-client" at 172.25.0.2:65433, see networks
    networks:
      serial_bridge:
        # fix IPv4 address to be known and in the MicroPython scripts
        # https://docs.docker.com/compose/compose-file/#ipv4_address
        ipv4_address: 172.25.0.2

  micropython-host:
    build:
      context: .
      dockerfile: Dockerfile.test_examples
    container_name: micropython-host
    volumes:
      - ./:/home
      - ./umodbus:/root/.micropython/lib/umodbus
      - ./fakes:/usr/lib/micropython
      - ./mpy_unittest.py:/root/.micropython/lib/mpy_unittest.py
    depends_on:
      - micropython-client
    command:
      - /bin/bash
      - -c
      - |
        micropython-dev -c "import mpy_unittest as unittest; unittest.main(name='tests.test_rtu_example', fromlist=['TestRtuExample'])"
    networks:
      serial_bridge:
        # fix IPv4 address to be known and in the MicroPython scripts
        # https://docs.docker.com/compose/compose-file/#ipv4_address
        ipv4_address: 172.25.0.3

networks:
  serial_bridge:
    # use "external: true" if the network already exists
    # check available networks with "docker network ls"
    # external: true
    driver: bridge
    # https://docs.docker.com/compose/compose-file/#ipam
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1
